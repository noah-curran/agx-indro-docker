ARG BASE_IMAGE=ubuntu:22.04
FROM ${BASE_IMAGE}

# Fundamentals
RUN --mount=type=cache,target=/var/cache/apt \
    apt-get update && apt-get install -y \
    apt-transport-https \
    apt-utils \
    bash-completion \
    build-essential \
    ca-certificates \
    clang-format \
    cmake \
    curl \
    git \
    git-lfs \
    gnupg2 \
    iputils-ping \
    libgoogle-glog-dev \
    locales \
    lsb-release \
    mlocate \
    rsync \
    tar \
    unzip \
    vim \
    wget \
    zlib1g-dev \

# Core dev libraries
    gfortran \
    graphicsmagick-libmagick-dev-compat \
    jq \
    kmod \
    lcov \
    libasio-dev \
    libassimp-dev \
    libatlas3-base \
    libatlas-base-dev \
    libblas3 \
    libboost-all-dev \
    libboost-dev \
    libbullet-dev \
    libceres-dev \
    libcunit1-dev \
    libffi7 \
    libfreetype6 \
    libgraphicsmagick++1-dev \
    libhidapi-libusb0 \
    libinput10 \
    libjpeg8 \
    liblapack3 \
    libmnl0 \
    libmnl-dev \
    libncurses5-dev \
    libode-dev \
    libopenblas0 \
    libopencv-dev=4.5.4+dfsg-9ubuntu4 \
    libopenmpi3 \
    libpcap-dev \
    libpcl-dev \
    libpython3.10 \
    libsuitesparse-dev \
    libtinyxml2-dev \
    libturbojpeg \
    libunwind8 \
    libv4l-0 \
    libv4l-dev \
    libx264-dev \
    libxaw7-dev \
    libyaml-cpp-dev \
    linuxptp \
    llvm-14 \
    nlohmann-json3-dev \
    patchelf \
    python3-opencv=4.5.4+dfsg-9ubuntu4 \
    python3-scipy

# Remove Boost v1.80.0
RUN rm -rf /usr/include/boost \
    && rm -rf /usr/lib/libboost_* \
    && rm -rf /usr/lib/cmake/Boost* \
    && rm -rf /usr/lib/pkgconfig/boost* \
# Install Boost v1.74.0
    && wget -O /tmp/boost.tar.gz \
    https://archives.boost.io/release/1.74.0/source/boost_1_74_0.tar.gz \
    && (cd /tmp && tar xzf boost.tar.gz) \
    && cd /tmp/boost_1_74_0 \
    && ./bootstrap.sh --prefix=/usr \
    && cd /tmp/boost_1_74_0 \
    && ./b2 -q -d0 install --without-python \
    && rm -rf /tmp/boost*

ARG AUTOWARE_SOURCE_VERSION=0.43.0
ARG AUTOWARE_GIT_URL=https://github.com/autowarefoundation/autoware

# Setup Autoware Install
WORKDIR /workspaces/isaac_ros-dev/src
RUN git clone --depth 1 -b ${AUTOWARE_SOURCE_VERSION} ${AUTOWARE_GIT_URL} \
    && cd autoware/ansible/playbooks \
    # && grep -v " - role: autoware.dev_env.agnocast " universe.yaml > universe.yaml.temp \
    # && mv universe.yaml.temp universe.yaml \
    && sed -i "/agnocast/d" universe.yaml \
    && sed -i "/dev_env.artifacts/d" universe.yaml \
    && sed -i "/download_artifacts/d" universe.yaml \
    && cd ../.. && ./setup-dev-env.sh --no-nvidia --no-cuda-drivers -y \
    && mkdir src \
    && vcs import src < autoware.repos \
    && source /opt/ros/humble/setup.bash \
    && rosdep update \
    && rosdep install -y --from-paths src --ignore-src --rosdistro humble

ARG MAKEFLAGS="-j1"
ENV MAKEFLAGS=${MAKEFLAGS}

# Install Autoware
RUN --mount=type=cache,target=/var/cache/apt \
    cd autoware \
    && source /opt/ros/humble/setup.bash \
    && colcon build --symlink-install --cmake-args \
    -DCMAKE_BUILD_TYPE=Release \
    -DBUILD_TESTING=OFF \
    --continue-on-error \
    --executor parallel \
    --parallel-workers 4
